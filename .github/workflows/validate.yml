{
	name: "✅ Validate Commit",
	on: {
		push: {},
		pull_request: {types: ["opened", "synchronize", "reopened"]}
	},
	run-name: "${{(github.event_name == 'push' && github.event.head_commit.message) || (github.event_name == 'pull_request' && github.event.pull_request.title) || github.run_id}}",
	
	jobs: {
		build-test: {
			name: "🛠️ Build & Test",
			if: "${{github.event_name != 'pull_request' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id)}}",
			permissions: {contents: "read"},
			
			uses: "./.github/workflows/build-test.yml"
		},
		prepare: {
			name: "🍳 Prepare",
			needs: "build-test",
			if: "${{github.event_name == 'push' && github.ref_name == github.event.repository.default_branch}}",
			permissions: {contents: "write"},
			
			runs-on: "ubuntu-24.04",
			timeout-minutes: 5,
			
			steps: [
				{
					id: "artifacts-download",
					name: "📥 Artifacts: Download",
					
					uses: "actions/download-artifact@v4.1.8",
					with: {name: "${{needs.build-test.outputs.product-identifier}}"}
				},
				{
					id: "prepare-archive",
					name: "🍱 Prepare: Archive",
					
					uses: "thedoctor0/zip-release@0.7.6",
					with: {filename: "Product.zip"}
				},
				{
					id: "prepare-release",
					name: "🔪 Prepare: Release",
					
					uses: "softprops/action-gh-release@v2.1.0",
					with: {
						draft: true,
						tag_name: "versions/a",
						
						files: "Product.zip",
						preserve_order: true,
						fail_on_unmatched_files: true
					}
				},
				{
					name: "Annotate",
					uses: "dkhunt27/action-annotations@v1",
					with: {msg: "# Release\n\n**URL**: ${{steps.prepare-release.outputs.url}}"}
				}
			]
		}
	}
}